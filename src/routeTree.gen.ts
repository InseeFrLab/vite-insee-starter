/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodoRouteImport } from './routes/todo'

const MuiLazyRouteImport = createFileRoute('/mui')()
const AccountLazyRouteImport = createFileRoute('/account')()
const IndexLazyRouteImport = createFileRoute('/')()

const MuiLazyRoute = MuiLazyRouteImport.update({
  id: '/mui',
  path: '/mui',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/mui.lazy').then((d) => d.Route))
const AccountLazyRoute = AccountLazyRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/account.lazy').then((d) => d.Route))
const TodoRoute = TodoRouteImport.update({
  id: '/todo',
  path: '/todo',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/todo': typeof TodoRoute
  '/account': typeof AccountLazyRoute
  '/mui': typeof MuiLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/todo': typeof TodoRoute
  '/account': typeof AccountLazyRoute
  '/mui': typeof MuiLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/todo': typeof TodoRoute
  '/account': typeof AccountLazyRoute
  '/mui': typeof MuiLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/todo' | '/account' | '/mui'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/todo' | '/account' | '/mui'
  id: '__root__' | '/' | '/todo' | '/account' | '/mui'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  TodoRoute: typeof TodoRoute
  AccountLazyRoute: typeof AccountLazyRoute
  MuiLazyRoute: typeof MuiLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/mui': {
      id: '/mui'
      path: '/mui'
      fullPath: '/mui'
      preLoaderRoute: typeof MuiLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo': {
      id: '/todo'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  TodoRoute: TodoRoute,
  AccountLazyRoute: AccountLazyRoute,
  MuiLazyRoute: MuiLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
